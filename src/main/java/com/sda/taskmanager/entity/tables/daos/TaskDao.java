/*
 * This file is generated by jOOQ.
 */
package com.sda.taskmanager.entity.tables.daos;


import com.sda.taskmanager.entity.tables.Task;
import com.sda.taskmanager.entity.tables.records.TaskRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskDao extends DAOImpl<TaskRecord, com.sda.taskmanager.entity.tables.pojos.Task, Integer> {

    /**
     * Create a new TaskDao without any configuration
     */
    public TaskDao() {
        super(Task.TASK, com.sda.taskmanager.entity.tables.pojos.Task.class);
    }

    /**
     * Create a new TaskDao with an attached configuration
     */
    public TaskDao(Configuration configuration) {
        super(Task.TASK, com.sda.taskmanager.entity.tables.pojos.Task.class, configuration);
    }

    @Override
    public Integer getId(com.sda.taskmanager.entity.tables.pojos.Task object) {
        return object.getTaskId();
    }

    /**
     * Fetch records that have <code>task_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.sda.taskmanager.entity.tables.pojos.Task> fetchRangeOfTaskId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Task.TASK.TASK_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>task_id IN (values)</code>
     */
    public List<com.sda.taskmanager.entity.tables.pojos.Task> fetchByTaskId(Integer... values) {
        return fetch(Task.TASK.TASK_ID, values);
    }

    /**
     * Fetch a unique record that has <code>task_id = value</code>
     */
    public com.sda.taskmanager.entity.tables.pojos.Task fetchOneByTaskId(Integer value) {
        return fetchOne(Task.TASK.TASK_ID, value);
    }

    /**
     * Fetch records that have <code>task_description BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.sda.taskmanager.entity.tables.pojos.Task> fetchRangeOfTaskDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(Task.TASK.TASK_DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>task_description IN (values)</code>
     */
    public List<com.sda.taskmanager.entity.tables.pojos.Task> fetchByTaskDescription(String... values) {
        return fetch(Task.TASK.TASK_DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>task_priority BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.sda.taskmanager.entity.tables.pojos.Task> fetchRangeOfTaskPriority(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Task.TASK.TASK_PRIORITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>task_priority IN (values)</code>
     */
    public List<com.sda.taskmanager.entity.tables.pojos.Task> fetchByTaskPriority(Integer... values) {
        return fetch(Task.TASK.TASK_PRIORITY, values);
    }

    /**
     * Fetch records that have <code>task_performer BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.sda.taskmanager.entity.tables.pojos.Task> fetchRangeOfTaskPerformer(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Task.TASK.TASK_PERFORMER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>task_performer IN (values)</code>
     */
    public List<com.sda.taskmanager.entity.tables.pojos.Task> fetchByTaskPerformer(Integer... values) {
        return fetch(Task.TASK.TASK_PERFORMER, values);
    }
}
